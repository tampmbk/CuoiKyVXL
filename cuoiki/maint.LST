C51 COMPILER V9.01   MAINT                                                                 06/12/2018 15:28:01 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAINT
OBJECT MODULE PLACED IN maint.OBJ
COMPILER INVOKED BY: E:\Labcenter Electronics\Keil\C51\BIN\C51.EXE maint.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <regx52.h>
   2          
   3          char enFlicker = 0;              //nhap nhay
   4          char flicker = 0;
   5          
   6          unsigned long start_counting_time = 0;
   7          unsigned long start_too_dry_time = 0;
   8          unsigned int T = 1;
   9          char is_too_dry = 0;
  10          
  11          enum State {
  12                  STATE_SHOWING,
  13                  STATE_SETTING
  14          } state = STATE_SHOWING;
  15          
  16          unsigned long counter0 = 0;
  17          unsigned long pressing_start;
  18          char pressing = 0;
  19          int showing = 0;
  20          int timespeak = 0;
  21          int isSpeak = 1;
  22          void show_empty();
  23          void show_number(int n);
  24          void show_clock(int n);
  25          
  26          void init() {
  27   1              TMOD = 0x11;     // 16 bit
  28   1              IP = 0x1A;         // interrupt priorities
  29   1      
  30   1              EX0 = 1;
  31   1              EX1 = 1;
  32   1              EA = 1;
  33   1      
  34   1              ET0 = 1;
  35   1              TR0 = 1;
  36   1      
  37   1              ET1 = 1;
  38   1              TR1 = 0;
  39   1      }
  40          void start_beep() {
  41   1              TR1 = 0;
  42   1              // 2ms
  43   1              TH1 = 0xF8;
  44   1              TL1 = 0x30;
  45   1              TR1 = 1;
  46   1      }
  47          void too_dry() {
  48   1              start_too_dry_time = counter0;
  49   1              is_too_dry = 1;
  50   1              P2_3 = 0;
  51   1              enFlicker++;
  52   1              start_beep();
  53   1      }
  54          void short_pressing() { 
  55   1              if (state == STATE_SHOWING) {
C51 COMPILER V9.01   MAINT                                                                 06/12/2018 15:28:01 PAGE 2   

  56   2                      //P2_0 = ~P2_0;
  57   2                      if(showing==0){
  58   3                              showing = 1;
  59   3                              P2_0 = 0;
  60   3                      }
  61   2                      else{
  62   3                              showing = 0;
  63   3                              P2_0=1;
  64   3                      }
  65   2              }
  66   1              else if (state == STATE_SETTING) {
  67   2                      T = (T) % 59 + 1;
  68   2              }
  69   1      }
  70          
  71          void long_pressing() {
  72   1              //P2_1 = ~P2_1;
  73   1              if (state == STATE_SHOWING)     {
  74   2                      P2_1=0;
  75   2                      state = STATE_SETTING;
  76   2                      enFlicker++;
  77   2              }
  78   1              else if (state == STATE_SETTING) {
  79   2                      P2_1=1;
  80   2                      state = STATE_SHOWING;
  81   2                      enFlicker--;
  82   2              }
  83   1      }
  84          int current_time() {            // t
  85   1              return (counter0 - start_counting_time) / 20;
  86   1      }
  87          void timer0() interrupt 1 {               //ngat Timer0
  88   1              // 50ms
  89   1              TH0 = 0x3c;
  90   1              TL0 = 0xb0;
  91   1              counter0++;                             // cu 50ms thi tang len 1
  92   1      
  93   1              if (counter0 % 10 == 0)                 // nhap nhay
  94   1                      flicker = ~flicker & 0x1;
  95   1      
  96   1              if (!is_too_dry && current_time() / 60 >= T)
  97   1                      too_dry();
  98   1      }
  99          
 100          void external0() interrupt 0 {                   // ngat INT0
 101   1              if (!pressing) {
 102   2                      pressing = 1;
 103   2                      pressing_start = counter0;
 104   2              }                               
 105   1              // 2ms
 106   1              TR1 = 0;
 107   1              TH1 = 0xF8;
 108   1              TL1 = 0x30;
 109   1              TR1 = 1;
 110   1      }
 111          void timer1() interrupt 3 {                              //ngat Timer1
 112   1              if (pressing) {
 113   2                      TR1 = 0;
 114   2                      pressing = 0;   
 115   2                      // 500ms
 116   2                      if (counter0 - pressing_start >= 20)
 117   2                              long_pressing();
C51 COMPILER V9.01   MAINT                                                                 06/12/2018 15:28:01 PAGE 3   

 118   2                      else
 119   2                              short_pressing();
 120   2      
 121   2                      if (is_too_dry)
 122   2                              start_beep();
 123   2              }
 124   1              else {                   // phat loa
 125   2                      TH1 = 0xF8;
 126   2                      TL1 = 0x30;
 127   2                      
 128   2                      if(isSpeak ==1){
 129   3                              P1_5 = ~P1_5; 
 130   3                      }
 131   2      
 132   2                      timespeak +=1;
 133   2                      if (timespeak == 100){
 134   3                              isSpeak = !isSpeak;
 135   3                              timespeak = 0;  
 136   3                      }
 137   2              }
 138   1      }
 139          
 140          
 141          void external1() interrupt 2 {             // sensor tuoi nuoc //ngat INT1
 142   1              counter0 = 0;
 143   1              start_counting_time = counter0;    // quay lai trang thai dau
 144   1              enFlicker=0;
 145   1              is_too_dry = 0;  // trang thái too_dry: 0
 146   1              TR1 = 0;
 147   1              //P2_0 = 1; //trang thai hien thi t :1 hay T :0
 148   1              //P2_1 = 1; // trang thai SHOWING:1 hay SETTING:0
 149   1              P2_3=1;   // trang thái too_dry: 0
 150   1              P2_4 = 0;
 151   1              P2_4 = 1;
 152   1      }
 153          void main() {
 154   1              P2 = 0xff;
 155   1              init();
 156   1              
 157   1              while (1) {
 158   2                      if (state == STATE_SHOWING) {
 159   3                              if (!pressing)
 160   3                                      if (!is_too_dry)
 161   3                                              if(showing==0){ 
 162   4                                                      show_clock(current_time());               // hien thi t
 163   4                                              }
 164   3                                              else{
 165   4                                                      show_number(T);
 166   4                                              }
 167   3      
 168   3                                      else
 169   3                                              show_clock(current_time());
 170   3                              else
 171   3                                      show_empty();
 172   3                      }
 173   2                      else if (state == STATE_SETTING) {
 174   3                              if (!pressing)
 175   3                                      show_number(T);
 176   3                              else
 177   3                                      show_empty();
 178   3                      }
 179   2              }
C51 COMPILER V9.01   MAINT                                                                 06/12/2018 15:28:01 PAGE 4   

 180   1      }
 181          void show_empty() {
 182   1              P1_0 = 0;
 183   1              P0 = 0xff;
 184   1              P1_0 = 1;
 185   1      
 186   1              P1_1 = 0;
 187   1              P0 = 0xff;
 188   1              P1_1 = 1;
 189   1      
 190   1              P1_2 = 0;
 191   1              P0 = 0xff;
 192   1              P1_2 = 1;
 193   1      
 194   1              P1_3 = 0;
 195   1              P0 = 0xff;
 196   1              P1_3 = 1;
 197   1      }
 198          void __show_number(int led, int n, int dot) 
 199          {
 200   1              int i;
 201   1      
 202   1              switch (led) {
 203   2              case 0:
 204   2                      P1_0 = 0;
 205   2                      break;
 206   2              case 1:
 207   2                      P1_1 = 0;
 208   2                      break;
 209   2              case 2:
 210   2                      P1_2 = 0;
 211   2                      break;
 212   2              case 3:
 213   2                      P1_3 = 0;
 214   2                      break;
 215   2              }
 216   1      
 217   1              switch (n) {
 218   2              case 0:
 219   2                      P0 = ~0x3f;
 220   2                      break;
 221   2              case 1:
 222   2                      P0 = ~0x06;
 223   2                      break;
 224   2              case 2:
 225   2                      P0 = ~0x5b;
 226   2                      break;
 227   2              case 3:
 228   2                      P0 = ~0x4f;
 229   2                      break;
 230   2              case 4:
 231   2                      P0 = ~0x66;
 232   2                      break;
 233   2              case 5:
 234   2                      P0 = ~0x6d;
 235   2                      break;
 236   2              case 6:
 237   2                      P0 = ~0x7d;
 238   2                      break;
 239   2              case 7:
 240   2                      P0 = ~0x07;
 241   2                      break;
C51 COMPILER V9.01   MAINT                                                                 06/12/2018 15:28:01 PAGE 5   

 242   2              case 8:
 243   2                      P0 = ~0x7f;
 244   2                      break;
 245   2              case 9:
 246   2                      P0 = ~0x6f;
 247   2                      break;
 248   2              }
 249   1      
 250   1              if (dot) 
 251   1                      P0_7 = 0;
 252   1      
 253   1              // Sleep
 254   1              i = 400;
 255   1              while (i--);
 256   1      
 257   1              switch (led) {
 258   2              case 0:
 259   2                      P1_0 = 1;
 260   2                      break;
 261   2              case 1:
 262   2                      P1_1 = 1;
 263   2                      break;
 264   2              case 2:
 265   2                      P1_2 = 1;
 266   2                      break;
 267   2              case 3:
 268   2                      P1_3 = 1;
 269   2                      break;
 270   2              }
 271   1      }
 272          void show_number(int n) {                                                       
 273   1              int n3, n2, n1, n0;
 274   1      
 275   1              if (enFlicker && flicker) {
 276   2                      show_empty();   
 277   2                      return;
 278   2              }
 279   1              
 280   1              n3 = n % 10; n /= 10;
 281   1              n2 = n % 10; n /= 10;
 282   1              n1 = n % 10; n /= 10;
 283   1              n0 = n;
 284   1      
 285   1              __show_number(0, n0, 0);
 286   1              __show_number(1, n1, 0);
 287   1              __show_number(2, n2, 0);
 288   1              __show_number(3, n3, 0);
 289   1      }
 290          void show_clock(int n) {                                                        
 291   1              int n3, n2, n1, n0;
 292   1              int minute,second;
 293   1              if (enFlicker && flicker) {
 294   2                      show_empty();   
 295   2                      return;
 296   2              }
 297   1              minute = n/60;
 298   1              second = n%60;
 299   1              n1 = minute % 10; minute /= 10;
 300   1              n0 = minute;
 301   1              n3 = second % 10; second /= 10;
 302   1              n2 = second;
 303   1      
C51 COMPILER V9.01   MAINT                                                                 06/12/2018 15:28:01 PAGE 6   

 304   1              __show_number(0, n0, 0);
 305   1              __show_number(1, n1, 1);
 306   1              __show_number(2, n2, 0);
 307   1              __show_number(3, n3, 0);
 308   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1126    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
